{
  "info": {
    "name": "Trash Mboa API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth Flow",
      "item": [
        {
          "name": "1. Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "    pm.expect(jsonData.refreshToken).to.exist;",
                  "    pm.expect(jsonData.user).to.exist;",
                  "    ",
                  "    // Sauvegarder le token pour les autres requêtes",
                  "    pm.environment.set(\"access_token\", jsonData.accessToken);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/register",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nom\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"telephone\": \"+237612345678\",\n  \"adresse\": \"Douala, Akwa\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "2. Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "    pm.expect(jsonData.refreshToken).to.exist;",
                  "    pm.expect(jsonData.user).to.exist;",
                  "    ",
                  "    // Sauvegarder le token pour les autres requêtes",
                  "    pm.environment.set(\"access_token\", jsonData.accessToken);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/login",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "1. Get Me",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.exist;",
                  "    pm.expect(jsonData.nom).to.exist;",
                  "    pm.expect(jsonData.email).to.exist;",
                  "    ",
                  "    // Sauvegarder l'ID utilisateur pour les autres requêtes",
                  "    pm.environment.set(\"user_id\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/users/me",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ]
          }
        },
        {
          "name": "2. Update User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User is updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.nom).to.equal(\"Updated Name\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/api/users/{{user_id}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nom\": \"Updated Name\",\n  \"telephone\": \"+237612345679\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "Dechets Management",
      "item": [
        {
          "name": "1. Create Dechet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Dechet is created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.exist;",
                  "    pm.expect(jsonData.type).to.equal(\"PLASTIQUE\");",
                  "    ",
                  "    // Sauvegarder l'ID du déchet pour les autres requêtes",
                  "    pm.environment.set(\"dechet_id\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/dechets",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"PLASTIQUE\",\n  \"quantite\": 2.5,\n  \"adresse\": \"Douala, Akwa\",\n  \"ville\": \"Douala\",\n  \"latitude\": 4.0511,\n  \"longitude\": 9.7679\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "2. Get Dechet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Dechet data is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.equal(parseInt(pm.environment.get(\"dechet_id\")));",
                  "    pm.expect(jsonData.type).to.equal(\"PLASTIQUE\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/dechets/{{dechet_id}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Signalements Management",
      "item": [
        {
          "name": "1. Create Signalement",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Signalement is created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.exist;",
                  "    pm.expect(jsonData.type).to.equal(\"DECHET_SAUVAGE\");",
                  "    ",
                  "    // Sauvegarder l'ID du signalement pour les autres requêtes",
                  "    pm.environment.set(\"signalement_id\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/signalements",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"DECHET_SAUVAGE\",\n  \"latitude\": 4.0511,\n  \"longitude\": 9.7679,\n  \"description\": \"Déchets abandonnés\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "2. Get Signalement",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Signalement data is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.equal(parseInt(pm.environment.get(\"signalement_id\")));",
                  "    pm.expect(jsonData.type).to.equal(\"DECHET_SAUVAGE\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/signalements/{{signalement_id}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Geo Tests",
      "item": [
        {
          "name": "Get Proximite",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.position).to.exist;",
                  "    pm.expect(jsonData.rayon).to.exist;",
                  "    pm.expect(jsonData.dechets).to.be.an('array');",
                  "    pm.expect(jsonData.signalements).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/geo/proximite",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "query": [
              {
                "key": "latitude",
                "value": "4.0511"
              },
              {
                "key": "longitude",
                "value": "9.7679"
              },
              {
                "key": "rayon",
                "value": "5"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Historique Tests",
      "item": [
        {
          "name": "Get Historique",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "    pm.expect(jsonData.historique).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/historique",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "query": [
              {
                "key": "type",
                "value": "DECHET"
              },
              {
                "key": "startDate",
                "value": "2024-03-01"
              },
              {
                "key": "endDate",
                "value": "2024-03-17"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Collectes Management",
      "item": [
        {
          "name": "1. Get Collectes en attente",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/collectes/en-attente",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ]
          }
        },
        {
          "name": "2. Valider Collecte",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has message and dechet\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.exist;",
                  "    pm.expect(jsonData.dechet).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/api/collectes/{{dechet_id}}/valider",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ]
          }
        }
      ]
    }
  ]
} 